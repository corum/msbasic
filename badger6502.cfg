MEMORY {
	ZP:		    start = $0000, size = $0100, type = rw, fill = yes, fillval = $00, file = %O;
	SYS:        start = $0100, size = $0300, type = rw, fill = yes, fillval = $00, file = %O;
	RAM:        start = $0400, size = $8C00, type = rw, fill = yes, fillval = $00, file = %O;
    BASROM:		start = $9000, size = $3000, type = ro, fill = yes, fillval = $00, file = %O;
    DEVICES:	start = $C000, size = $0600, type = rw, fill = yes, fillval = $00, file = %O;
    DISKROM:    start = $C600  size = $0100, type = rw, fill = yes, fillval = $00, file = %O;
    DEVICES2:   start = $C700  size = $0100, type = rw, fill = yes, fillval = $00, file = %O;
    RAM2: 	    start = $C800, size = $0800, type = rw, fill = yes, fillval = $00, file = %O;
    BANK:       start = $D000, size = $1000, type = ro, fill = yes, fillval = $00, file = %O;
	OSROM:		start = $E000, size = $13F0, type = ro, fill = yes, fillval = $00, file = %O;
    RETURN:     start = $F3F0, size = $0110, type = ro, fill = yes, fillval = $00, file = %O;
	DATA:       start = $F500, size = $0300, type = ro, fill = yes, fillval = $00, file = %O;
	A2ROM:		start = $F800, size = $0800, type = ro, fill = yes, fillval = $00, file = %O;
	DUMMY:		start = $0000, size = $00FF, file = "";
	EMPTY:      start = $10000, size = $70000, type = ro, fill = yes, fillval = $00, file = %O;
}

SEGMENTS {
	ZEROPAGE:	    load = ZP, type = zp;
    CODE:           load = BASROM,  type = ro;
	VECTORS:        load = BASROM,  type = ro;
	KEYWORDS:	    load = BASROM,	type = ro;
	ERROR:		    load = BASROM,	type = ro;
	CHRGET:		    load = BASROM,	type = ro;
	INIT:		    load = BASROM,	type = ro;
	EXTRA:		    load = BASROM,	type = ro;
	DUMMY:		    load = DUMMY; # don't include
	A2DISK:         load = DISKROM, type = ro, define=yes, optional=yes;
    HEADER:         load = OSROM,  type = ro;
	BANKROM:        load = BANK,   type = ro, define=yes, optional=yes;
	OS:             load = OSROM,  type = ro, define=yes, optional=yes;
    RETURN:         load = RETURN, type = ro, define=yes, optional=yes;
	DATASEG:        load = DATA, type = ro, define = yes, optional=yes; 
	A2MON:          load = A2ROM,  type = ro, define=yes, optional=yes;
#   WOZ:            load = A2ROM,  type = ro, define=yes, offset=$700;
    BOOTVECTORS:    load = A2ROM,  type = ro, define=yes, offset=$7FA, optional=yes;
}