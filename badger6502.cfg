MEMORY {
	ZP:		    start = $0000, size = $0100, type = rw, fill = yes, fillval = $00, file = %O;
	SYS:        start = $0100, size = $0300, type = rw, fill = yes, fillval = $00, file = %O;
	RAM:        start = $0400, size = $8C00, type = rw, fill = yes, fillval = $00, file = %O;
    BASROM:		start = $9000, size = $3000, type = ro, fill = yes, fillval = $00, file = %O;
    DEVICES:	start = $C000, size = $0800, type = rw, fill = yes, fillval = $00, file = %O;
    RAM2: 	    start = $C800, size = $0800, type = rw, fill = yes, fillval = $00, file = %O;
    BANK:       start = $D000, size = $1000, type = ro, fill = yes, fillval = $00, file = %O;
	OSROM:		start = $E000, size = $2000, type = ro, fill = yes, fillval = $00, file = %O;
	DUMMY:		start = $0000, size = $00FF, file = "";
	EMPTY:      start = $10000, size = $70000, type = ro, fill = yes, fillval = $00, file = %O;
}

SEGMENTS {
	ZEROPAGE:	    load = ZP, type = zp;
    CODE:           load = BASROM,  type = ro;
	VECTORS:        load = BASROM,  type = ro;
	KEYWORDS:	    load = BASROM,	type = ro;
	ERROR:		    load = BASROM,	type = ro;
	CHRGET:		    load = BASROM,	type = ro;
	INIT:		    load = BASROM,	type = ro;
	EXTRA:		    load = BASROM,	type = ro;
	DUMMY:		    load = DUMMY; # don't include
    HEADER:         load = OSROM,  type = ro;
	OS:             load = OSROM,  type = ro, define=yes, optional=yes;
    WOZ:            load = OSROM,  type = ro, define=yes, offset=$1F00;
    BOOTVECTORS:    load = OSROM,  type = ro, define=yes, offset=$1FFA, optional=yes;
}

