MEMORY {
	ZP:		    start = $0000, size = $0100, type = rw, fill = yes, fillval = $00, file = "";
	SYS:        start = $0100, size = $0300, type = rw, fill = yes, fillval = $00, file = "";
	RAM:        start = $0300, size = $7D00, type = rw, fill = yes, fillval = $00, file = "";
	RAMBANK:    start = $8000, size = $4000, type = rw, fill = yes, fillval = $00, file = %O;
    DEVICES:	start = $C000, size = $0100, type = rw, fill = yes, fillval = $00, file = %O;
    BASROM:		start = $C100, size = $2200, type = ro, fill = yes, fillval = $00, file = %O;
    OSROM:		start = $E300, size = $1D00, type = ro, fill = yes, fillval = $00, file = %O;
	DUMMY:		start = $0000, size = $00FF, file = "";
}

SEGMENTS {
	ZEROPAGE:	    load = ZP, type = zp;
    HEADER:         load = BASROM,  type = ro;
    CODE:           load = BASROM,  type = ro;
	VECTORS:        load = BASROM,  type = ro;
	KEYWORDS:	    load = BASROM,	type = ro;
	ERROR:		    load = BASROM,	type = ro;
	CHRGET:		    load = BASROM,	type = ro;
	INIT:		    load = BASROM,	type = ro;
	EXTRA:		    load = BASROM,	type = ro;
	DUMMY:		    load = DUMMY; # don't include
	OS:             load = OSROM,  type = ro, define=yes, optional=yes;
    WOZ:            load = OSROM,  type = ro, define=yes, offset=$1C00;
    BOOTVECTORS:    load = OSROM,  type = ro, define=yes, offset=$1CFA, optional=yes;
}

